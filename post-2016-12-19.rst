.. post:: 2016-12-19
   :tags: avr
   :title: New blogging, new danger

New blogging, new danger
========================

I have been getting increasing frustrated with the blogging system I had been using. It was basically `sphinx` with a bit of extra processing from soemthing called `ablog`. It seemed very hard to change or extend anything and generated pages that (for some reason) needed to be a sub-directory of the main site (requiring a forward from index.html) and loaded very slowly. 

It also seemed to confuse `git` quite a lot every time I rebuilt the site.

I started looking deeper into how it all worked. It appears that almost all the formatting cleverness is done through `alabaster.css`, just adding that to the top a reasonably plain html file generates pages that look quite pleasant.

This inspired me to see if I could recreate the other useful bits of the set up (converting `.rst` files into `.html` and building a search index) in a clearer, simpler, way.

The search index is created by  `/usr/lib64/python3.4/site-packages/sphinx/search/__init__.py` with help from `/usr/lib64/python3.4/site-packages/sphinx/search/en.py`. Each word is reduced to its stem, using the porterstemmer algorithm, then filtered. 

The source indicated a C implimentation of the stemmer could be found [here](http://www.tartarus.org/~martin/PorterStemmer).

I then needed to parse my rst files into a single doctools doctree object and run the indexer.

After a certain amount of toiling in the sphinx source (and minimal documentation), I realised that it would be quicker (and more fun) to write my own sort-of-rst parser. This would have the added benefit that I could do links in a much more sensible manner (i.e. like markdown).

This I have now done (apart from tables) and this (current) blog is the result.

The code is available from [here](https://github.com/swissdrumassault/swissdrumassault.github.io.git).